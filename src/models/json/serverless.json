{
  "RetryDefault": {
    "Retry": [
      {
        "BackoffRate": 2,
        "ErrorEquals": [
          "States.ALL"
        ],
        "IntervalSeconds": 1,
        "MaxAttempts": 0
      }
    ]
  },
  "custom": {
    "integrationName": "${self:service}-${self:provider.stage}"
  },
  "functions": {
    "createOrderAction": {
      "handler": "dist/app.createOrderActionHandler",
      "name": "${self:custom.integrationName}-createOrderAction"
    },
    "onInstallEvent": {
      "handler": "dist/app.onInstallEventHandler",
      "name": "${self:custom.integrationName}-onInstallEvent"
    },
    "uninstallAction": {
      "handler": "dist/app.uninstallActionHandler",
      "name": "${self:custom.integrationName}-uninstallAction"
    },
    "updateCustVerifyStatusEvent": {
      "handler": "dist/app.updateCustVerifyStatusEventHandler",
      "name": "${self:custom.integrationName}-updateCustVerifyStatusEvent"
    },
    "updateEQ8ScoreEvent": {
      "handler": "dist/app.updateEQ8ScoreEventHandler",
      "name": "${self:custom.integrationName}-updateEQ8ScoreEvent"
    },
    "updateMerchantAction": {
      "handler": "dist/app.updateMerchantActionHandler",
      "name": "${self:custom.integrationName}-updateMerchantAction"
    },
    "updateOrderRiskEvent": {
      "handler": "dist/app.updateOrderRiskEventHandler",
      "name": "${self:custom.integrationName}-updateOrderRiskEvent"
    },
    "updateOrderStatusAction": {
      "handler": "dist/app.updateOrderStatusActionHandler",
      "name": "${self:custom.integrationName}-updateOrderStatusAction"
    },
    "updateOrderStatusEvent": {
      "handler": "dist/app.updateOrderStatusEventHandler",
      "name": "${self:custom.integrationName}-updateOrderStatusEvent"
    }
  },
  "package": {
    "exclude": [
      "src/**",
      "test/**",
      ".circleci/**",
      "scripts/**",
      ".idea/**",
      ".vscode/**",
      "README.md",
      "?*/**.map",
      "?*.json",
      "?*.lock",
      "?*.log"
    ],
    "include": [
      "switchboard.json"
    ]
  },
  "plugins": [
    "serverless-step-functions",
    "serverless-pseudo-parameters"
  ],
  "provider": {
    "iamRoleStatements": [
      {
        "Action": "s3:GetObject",
        "Effect": "Allow",
        "Resource": "arn:aws:s3:::protect-api-switch-data-${self:provider.stage}/*"
      }
    ],
    "name": "aws",
    "region": "us-west-2",
    "runtime": "nodejs8.10",
    "stage": "${opt:stage, env:DEV_NAME}",
    "timeout": 30
  },
  "service": "ns8-switchboard-${file(./switchboard.json):integrationId}",
  "stepFunctions": {
    "stateMachines": {
      "createOrderAction": {
        "definition": {
          "StartAt": "createOrderActionStart",
          "States": {
            "createOrderActionStart": {
              "End": true,
              "Resource": "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:custom.integrationName}-createOrderAction",
              "Retry": [
                {
                  "BackoffRate": 2,
                  "ErrorEquals": [
                    "States.ALL"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 0
                }
              ],
              "Type": "Task"
            }
          }
        },
        "name": "${self:custom.integrationName}-createOrderAction"
      },
      "onInstallEvent": {
        "definition": {
          "StartAt": "onInstallEventStart",
          "States": {
            "onInstallEventStart": {
              "End": true,
              "Resource": "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:custom.integrationName}-onInstallEvent",
              "Retry": [
                {
                  "BackoffRate": 2,
                  "ErrorEquals": [
                    "States.ALL"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 0
                }
              ],
              "Type": "Task"
            }
          }
        },
        "name": "${self:custom.integrationName}-onInstallEvent"
      },
      "uninstallAction": {
        "definition": {
          "StartAt": "uninstallActionStart",
          "States": {
            "uninstallActionStart": {
              "End": true,
              "Resource": "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:custom.integrationName}-uninstallAction",
              "Retry": [
                {
                  "BackoffRate": 2,
                  "ErrorEquals": [
                    "States.ALL"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 0
                }
              ],
              "Type": "Task"
            }
          }
        },
        "name": "${self:custom.integrationName}-uninstallAction"
      },
      "updateCustVerifyStatusEvent": {
        "definition": {
          "StartAt": "updateCustVerifyStatusEventStart",
          "States": {
            "updateCustVerifyStatusEventStart": {
              "End": true,
              "Resource": "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:custom.integrationName}-updateCustVerifyStatusEvent",
              "Retry": [
                {
                  "BackoffRate": 2,
                  "ErrorEquals": [
                    "States.ALL"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 0
                }
              ],
              "Type": "Task"
            }
          }
        },
        "name": "${self:custom.integrationName}-updateCustVerifyStatusEvent"
      },
      "updateEQ8ScoreEvent": {
        "definition": {
          "StartAt": "updateEQ8ScoreEventStart",
          "States": {
            "updateEQ8ScoreEventStart": {
              "End": true,
              "Resource": "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:custom.integrationName}-updateEQ8ScoreEvent",
              "Retry": [
                {
                  "BackoffRate": 2,
                  "ErrorEquals": [
                    "States.ALL"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 0
                }
              ],
              "Type": "Task"
            }
          }
        },
        "name": "${self:custom.integrationName}-updateEQ8ScoreEvent"
      },
      "updateMerchantAction": {
        "definition": {
          "StartAt": "updateMerchantActionStart",
          "States": {
            "updateMerchantActionStart": {
              "End": true,
              "Resource": "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:custom.integrationName}-updateMerchantAction",
              "Retry": [
                {
                  "BackoffRate": 2,
                  "ErrorEquals": [
                    "States.ALL"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 0
                }
              ],
              "Type": "Task"
            }
          }
        },
        "name": "${self:custom.integrationName}-updateMerchantAction"
      },
      "updateOrderRiskEvent": {
        "definition": {
          "StartAt": "updateOrderRiskEventStart",
          "States": {
            "updateOrderRiskEventStart": {
              "End": true,
              "Resource": "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:custom.integrationName}-updateOrderRiskEvent",
              "Retry": [
                {
                  "BackoffRate": 2,
                  "ErrorEquals": [
                    "States.ALL"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 0
                }
              ],
              "Type": "Task"
            }
          }
        },
        "name": "${self:custom.integrationName}-updateOrderRiskEvent"
      },
      "updateOrderStatusAction": {
        "definition": {
          "StartAt": "updateOrderStatusActionStart",
          "States": {
            "updateOrderStatusActionStart": {
              "End": true,
              "Resource": "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:custom.integrationName}-updateOrderStatusAction",
              "Retry": [
                {
                  "BackoffRate": 2,
                  "ErrorEquals": [
                    "States.ALL"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 0
                }
              ],
              "Type": "Task"
            }
          }
        },
        "name": "${self:custom.integrationName}-updateOrderStatusAction"
      },
      "updateOrderStatusEvent": {
        "definition": {
          "StartAt": "updateOrderStatusEventStart",
          "States": {
            "updateOrderStatusEventStart": {
              "End": true,
              "Resource": "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:custom.integrationName}-updateOrderStatusEvent",
              "Retry": [
                {
                  "BackoffRate": 2,
                  "ErrorEquals": [
                    "States.ALL"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 0
                }
              ],
              "Type": "Task"
            }
          }
        },
        "name": "${self:custom.integrationName}-updateOrderStatusEvent"
      }
    }
  }
}
